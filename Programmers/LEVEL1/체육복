#include <string>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

int solution(int n, vector<int> lost, vector<int> reserve) {
    int answer = 0;   
    
    sort(lost.begin(), lost.end());
    sort(reserve.begin(), reserve.end());

    map<int, int> student_check;

    for(int i = 0; i < lost.size(); i++)
    {
        student_check[lost[i]] = -1;
    }
    for(int i = 0; i < reserve.size(); i++)
    {
        if(student_check[reserve[i]] == -1)
        {
            student_check[reserve[i]] = 0;
        }
        else
        {
            student_check[reserve[i]] = 1;
        }
    }

    for(int i = 0; i < reserve.size(); i++)
    {
        if(student_check[reserve[i]] == 1 && student_check[reserve[i] - 1] == -1)
        {
            student_check[reserve[i]] = 0;
            student_check[reserve[i] - 1] = 1;
        }
        else if(student_check[reserve[i]] == 1 && student_check[reserve[i] + 1] == -1)
        {
            student_check[reserve[i]] = 0;
            student_check[reserve[i] + 1] = 1;
        }
    }

    for(map<int, int>::iterator iter = student_check.begin(); iter != student_check.end(); iter++)
    {
        if(iter->second == -1)
        {
            answer -= 1;
        }
    }

    return answer + n;
}
