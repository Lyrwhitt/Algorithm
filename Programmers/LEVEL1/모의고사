#include <string>
#include <vector>
#include <algorithm>

using namespace std;

bool sortSupoza(pair<int, int> a, pair<int, int> b)
{
    if(a.second == b.second)
    {
        return a.first < b.first;
    }
    else
    {
        return a.second > b.second;
    }
}

vector<int> solution(vector<int> answers) {
    
    int pattern1[5] = {1, 2, 3, 4, 5};
    int pattern2[8] = {2, 1, 2, 3, 2, 4, 2, 5};
    int pattern3[10] = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
    
    vector<pair<int, int>> supoza;
    
    vector<int> answer;
    
    supoza.push_back(make_pair(1, 0));
    supoza.push_back(make_pair(2, 0));
    supoza.push_back(make_pair(3, 0));
    
    for(int i = 0; i < answers.size(); i++)
    {
        if(answers[i] == pattern1[i % 5])
        {
            supoza[0].second++;
        }
        if(answers[i] == pattern2[i % 8])
        {
            supoza[1].second++;
        }
        if(answers[i] == pattern3[i % 10])
        {
            supoza[2].second++;
        }
    }   
    
    sort(supoza.begin(), supoza.end(), sortSupoza);
    
    int max = 0;
    
    for(int i = 0; i < supoza.size(); i++)
    {   
        if(supoza[i].second >= max)
        {
            answer.push_back(supoza[i].first);
            max = supoza[i].second;
        }
        else
            break;
    }
    
    return answer;
}
